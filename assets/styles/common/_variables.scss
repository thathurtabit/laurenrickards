@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}


// Grid settings
$enable-flex:           true;
$enable-transitions:	true;
$main-sm-columns:       24;
$main-md-columns:       24 !default;
$sidebar-sm-columns:    4;

// Colors
		

$brand-primary:         #666;
$brand-yellow:			#f2cc0d;
$brand-purple:			#8501ED;
$brand-blue:			#2146FF;
$brand-orange:			#F78F01;
$brand-red:				#E0370B;
$brand-pink:			#F70187;
$brand-green:			#14F742;


$group-colors:			$brand-yellow, $brand-purple, $brand-orange, $brand-green, $brand-blue, $brand-red, $brand-pink;

$black:					#000;
$white:					#fff;
$text-color:			#444;
$bg-grey:				darken($white, 3%);


// Typography
//
// Font, line-height, and color for body text, headings, and more.

$font-family-sans-serif: "filson-soft", "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif !default;
$font-family-serif:      "reklame-script", Georgia, "Times New Roman", Times, serif !default;
$font-family-monospace:  Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;
$font-family-base:       $font-family-sans-serif !default;

// Pixel value used to responsively scale all typography. Applied to the `<html>` element.
$font-size-root: 16px !default;

$border-color:			#eee;


// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
  xs: 0,
  sm: 544px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1500px
) !default;
@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");


// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
  sm: 576px,
  md: 720px,
  lg: 940px,
  xl: 1140px,
  xxl: 1440px
) !default;
@include _assert-ascending($container-max-widths, "$container-max-widths");